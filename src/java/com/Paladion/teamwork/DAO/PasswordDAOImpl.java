/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.Paladion.teamwork.DAO;

import com.Paladion.teamwork.beans.EmailBean;
import com.Paladion.teamwork.beans.SystemBean;
import com.Paladion.teamwork.beans.UserDataBean;
import com.Paladion.teamwork.services.AdminService;
import com.Paladion.teamwork.utils.CommonUtil;
import com.Paladion.teamwork.utils.EmailUtil;
import java.security.SecureRandom;
import java.util.Iterator;
import java.util.List;
import org.apache.commons.lang.RandomStringUtils;
import org.hibernate.Query;
import org.hibernate.SQLQuery;
import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.Transaction;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;

/**
 *
 * @author santosh.babar
 */
public class PasswordDAOImpl implements PasswordDAO {
       
    @Autowired
    @Qualifier(value="hibernate4AnnotatedSessionFactory")
    private SessionFactory sessionFactory;

    public void setSessionFactory(SessionFactory sessionFactory) {
        this.sessionFactory = sessionFactory;
    }

    @Autowired
    @Qualifier(value="CommonUtil")
    CommonUtil CU;
    
    @Autowired
    @Qualifier(value="AdminService")
    AdminService AS;
    
    @Override
    public boolean ForgotPassword(String email){
	UserDataBean UserBean=null;
        Transaction tx;
        Session session = this.sessionFactory.openSession();
        tx=session.beginTransaction();
        String query ="from UserDataBean as o where o.email=?";
        Query query1 = session.createQuery(query);
        query1.setParameter(0,email);
        List list1=query1.list();
        tx.commit();
        Iterator it= list1.iterator();
        while(it.hasNext())
        {
         UserBean=(UserDataBean) it.next();
        }
        
        if ((list1 != null) && UserBean!=null) 
        {
            String otp= RandomStringUtils.random(8, 0, 0, true, true, null, new SecureRandom());
            this.insertOtp(otp, UserBean.getEmail());
            
            EmailUtil eUtil= new EmailUtil();
            EmailBean Ebean=new EmailBean();
            String emailMessage="Dear "+UserBean.getUsername()+"\n\nThe OTP to reset your password in Paladion Teamwork Portal is: " +otp+ ".\nOTP is valid for only 10 Minutes.\n\nPlease ignore if this request was not generated by you.\n\nRegards\nTeam Paladion";
            Ebean.setSubject("Paladion Teamwork Password Reset Request");
            Ebean.setMessage(emailMessage);
            Ebean.setTo(UserBean.getEmail());
            System.out.print("i got your email id "+UserBean.getEmail());
            
            SystemBean sysBean = AS.getSystemSettings();
            
            System.out.println("Forgot password");
            //update userdata set OTP=? where email=? email ge SessUserBean.getEmail()
            eUtil.sendEmail(Ebean, sysBean); 
            return true;
        }
        else
        {
        return false;
        }       
    }
    
    @Override
    public boolean ResetPassword(String otp, String email, String password){
        UserDataBean UserBean=null;
        Session session = this.sessionFactory.openSession();
        Transaction tx = null;
	tx = session.beginTransaction();
        String SQL_QUERY1 ="from UserDataBean as o where o.otp=? and o.email=?";
        Query query1 = session.createQuery(SQL_QUERY1);
        query1.setParameter(0,otp);
        query1.setParameter(1,email);
        List list1=query1.list();
        tx.commit();
        Iterator it= list1.iterator();
        while(it.hasNext())
        {
            UserBean=(UserDataBean) it.next();
        }
                        
        if ( UserBean!=null) 
        {    
            this.updatePassword(password, UserBean.getEmail());
            return true;
        }
        else
        {
        return false;
        }            
    }
    
    
    public void insertOtp(String otp,String email){
            Session session1 = this.sessionFactory.openSession();
            Transaction tx;
            tx=session1.beginTransaction();
             String sql = "update users set otp=? where email=?";
             SQLQuery query2 = session1.createSQLQuery(sql);
             query2.setParameter(0, otp);
             query2.setParameter(1, email);
             query2.executeUpdate();
             tx.commit();
    }
    
    @Override
    public void updatePassword(String password,String email){
        Session session1 = this.sessionFactory.openSession();
        Transaction tx;
        tx=session1.beginTransaction();
        String sql = "update users set password=?, otp=? where email=?";
        SQLQuery query = session1.createSQLQuery(sql);
        query.setParameter(0, password);
        query.setParameter(1, null);
        query.setParameter(2, email);
        query.executeUpdate();
        tx.commit();
    }
}
